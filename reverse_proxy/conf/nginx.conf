#user  nobody;
worker_processes  1;

error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;

    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

# .luaで終わらないパスを書くとエラーになる。
# nginx: [alert] failed to load the 'resty.core' module (https://github.com/openresty/lua-resty-core); ensure you are using an OpenResty release from https://openresty.org/en/download.html (reason: error loading module 'resty.core' from file '/usr/local/openresty':
# lua-reverse-proxy-myapp-1  | 	cannot read /usr/local/openresty: Is a directory) in /usr/local/openresty/nginx/conf/nginx.conf:54
# lua-reverse-proxy-myapp-1 exited with code 1

    lua_package_path "/usr/local/openresty/lualib/?.lua;/usr/local/openresty/luajit/libs/?.lua;/usr/local/openresty/luajit/share/luajit-2.1.0-beta3/jit/?.lua;/usr/local/openresty/reverse-proxy/src/?.lua;/usr/local/openresty/lualib/resty/?.lua;/usr/local/openresty/lualib/ngx/?.lua;/usr/local/openresty/?.lua;;";
    lua_package_cpath "/usr/local/openresty/luajit/lib/libluajit-5.1/?.so;;";

    # https://dev.classmethod.jp/articles/docker-service-discovery/によるとコンテナで使用されるネームサーバは127.0.0.11で固定。
    # [error] 8#8: recv() failed (111: Connection refused) while resolving, resolver: 127.0.0.1:53.
    resolver 127.0.0.11 ipv6=off;

    # バックエンドサーバへのリクエストを処理するグループ(使ってないかも)
    upstream backend_app {
        server 0.0.0.1;
        balancer_by_lua_file /usr/local/openresty/reverse-proxy/src/balancer.lua;
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 5s;
    }

    server {
        listen [::]:80 ipv6only=off;  # IPv4のみを有効にする
        server_name  localhost;

        location / {
            root   /usr/local/openresty/lua_reverse-proxy/html;

            set $pass ""; # luaで書き換える変数
            set $session_storage cooie;
            # set $session_encoder base64;
            # set $session_secret "mysecret"
            default_type 'text/html';
            access_by_lua_file /usr/local/openresty/reverse_proxy/src/main.lua;
            # リクエストを$pass(バックエンド)に送信する。
            proxy_pass $pass;

            # log_by_lua_file /usr/local/openresty/lua_reverse-proxy/src/log_filter.lua;
        }

        # ヘルスチェック用。リバースプロキシ側だけでリクエストが完結するのでバックエンドにリクエストが飛ばない。
        location = /status.html {
            default_type 'text/html';
            echo "OK";
        }

        # ヘルスチェック用その2。こっちはアクセス先が不明なため，バックエンドにリクエストが飛ぶ。
        location = /contents {
            default_type 'text/html';
            echo "OK";
        }

        # リダイレクトのテスト用
        location = /lua/redirect.html {
            default_type 'text/html';
            access_by_lua_file /usr/local/openresty/reverse_proxy/src/redirect.lua;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}
